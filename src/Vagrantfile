Vagrant.configure("2") do |config|
  # Box padrão para todas (pode mudar por VM)
  BOX_NAME = "ubuntu/bionic64"

  # Configurações comuns (sincronização de pasta padrão, etc)
  config.vm.synced_folder ".", "/vagrant", disabled: false

  ####################
  # VM: alvo
  ####################
  config.vm.define "alvo" do |alvo|
    alvo.vm.box = BOX_NAME
    alvo.vm.hostname = "alvo"
    alvo.vm.network "private_network", ip: "192.168.56.10"

    # Recursos
    alvo.vm.provider "virtualbox" do |vb|
      vb.name = "vagrant-alvo"
      vb.memory = 1024
      vb.cpus = 1
    end

    # Provision (ex: instala openssh-server e atualiza)
    alvo.vm.provision "shell", inline: <<-SHELL
      apt-get update
      apt-get install -y --no-install-recommends openssh-server
      # colocar aqui outros comandos de configuração do alvo
    SHELL
  end

  ####################
  # VM: alvo-hardened
  ####################
  config.vm.define "alvo-hardened" do |h|
    h.vm.box = BOX_NAME
    h.vm.hostname = "alvo-hardened"
    h.vm.network "private_network", ip: "192.168.56.11"

    h.vm.provider "virtualbox" do |vb|
      vb.name = "vagrant-alvo-hardened"
      vb.memory = 2048
      vb.cpus = 2
    end

    # Provision que faz "hardening" básico (ex: bloqueia portas desnecessárias, atualiza)
    h.vm.provision "shell", inline: <<-SHELL
      apt-get update
      apt-get upgrade -y
      apt-get install -y ufw fail2ban
      
      # Configuração do Firewall UFW
      ufw default deny incoming
      ufw default allow outgoing
      ufw allow 22/tcp
      ufw --force enable
      
      # Configuração avançada do SSH para hardening
      # Backup da configuração original
      cp /etc/ssh/sshd_config /etc/ssh/sshd_config.bak
      
      # Desabilitar login root via SSH
      sed -i 's/^#*PermitRootLogin.*/PermitRootLogin no/' /etc/ssh/sshd_config
      
      # Limitar tentativas de autenticação
      sed -i 's/^#*MaxAuthTries.*/MaxAuthTries 3/' /etc/ssh/sshd_config
      
      # Timeout de login
      sed -i 's/^#*LoginGraceTime.*/LoginGraceTime 30/' /etc/ssh/sshd_config
      
      # Desabilitar autenticação por senha vazia
      sed -i 's/^#*PermitEmptyPasswords.*/PermitEmptyPasswords no/' /etc/ssh/sshd_config
      
      # Configurar fail2ban para SSH
      cat > /etc/fail2ban/jail.local <<EOF
[DEFAULT]
bantime = 3600
findtime = 600
maxretry = 3

[sshd]
enabled = true
port = 22
filter = sshd
logpath = /var/log/auth.log
maxretry = 3
bantime = 3600
EOF
      
      # Reiniciar serviços
      systemctl enable fail2ban
      systemctl restart fail2ban
      systemctl restart sshd
      
      echo "=== HARDENING SSH APLICADO ==="
      echo "- Root login: DESABILITADO"
      echo "- Max tentativas: 3"
      echo "- Timeout login: 30s"
      echo "- Fail2ban: ATIVO (ban após 3 tentativas)"
      echo "- UFW: ATIVO"
    SHELL
  end

  ####################
  # VM: atacante
  ####################
  config.vm.define "atacante" do |atk|
    atk.vm.box = BOX_NAME
    atk.vm.hostname = "atacante"
    atk.vm.network "private_network", ip: "192.168.56.20"

    atk.vm.provider "virtualbox" do |vb|
      vb.name = "vagrant-atacante"
      vb.memory = 2048
      vb.cpus = 2
    end

    # Provision: instala ferramentas de teste/ataque (ex: nmap, tcpdump)
    atk.vm.provision "shell", inline: <<-SHELL
      apt-get update
      apt-get install -y nmap tcpdump net-tools iproute2
      # cuidado: use essas ferramentas apenas em ambientes controlados
    SHELL
  end
end
